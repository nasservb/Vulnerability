<?php

namespace App\Domains\Vulnerability\Http\Controllers;

use App\Domains\Vulnerability\Models\Vulnerability;
use App\Domains\Vulnerability\Http\Requests\VulnerabilityRequest;
use App\Domains\Vulnerability\Http\Resources\VulnerabilityResource;
use \App\Http\Controllers\Controller;
use Illuminate\Http\Resources\Json\AnonymousResourceCollection;


class VulnerabilityController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return AnonymousResourceCollection
     */
    public function index()
    {
        return VulnerabilityResource::collection(Vulnerability::query()->paginate());
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param VulnerabilityRequest $request
     * @return VulnerabilityResource
     */
    public function store(VulnerabilityRequest $request)
    {
        $item =Vulnerability::create($request->all());
        return new VulnerabilityResource($item);
    }

    /**
     * Display the specified resource.
     *
     * @param  Vulnerability  $vulnerability
     * @return VulnerabilityResource
     */
    public function show(Vulnerability $vulnerability)
    {
        return new VulnerabilityResource($vulnerability);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param VulnerabilityRequest $request
     * @param Vulnerability $vulnerability
     *
     * @return VulnerabilityResource
     */
    public function update(VulnerabilityRequest $request, Vulnerability $vulnerability)
    {
        $vulnerability->title = $request->title;
        $vulnerability->description = $request->description;
        $vulnerability->update();
        return new VulnerabilityResource($vulnerability);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  Vulnerability  $vulnerability
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy(Vulnerability $vulnerability)
    {
        $vulnerability->delete();
        return response()->json(['OK']);
    }
}
